<script>
    const userState = <%- JSON.stringify(datatoPass) %>;

    const stateModal = new bootstrap.Modal(document.getElementById('stateModal'));
        if (userState.state === '0' || userState.state === 0) {
                stateModal.show();
            } else {
               stateModal.hide()
            }

        document.addEventListener('DOMContentLoaded', function () {
            const stateDropdown = document.getElementById('state');

            stateDropdown.addEventListener('change', function () {
                const selectedState = stateDropdown.value;
                console.log('State selected:', selectedState);

                fetchData(selectedState);
            });
        });


    function fetchData(state) {
        const stateId = state.split(',')[0].trim()
        const url = `/setup/lga?state_id=${stateId}`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                // console.log('LGA data received:', data);

                const lgaDropdown = document.getElementById('lga');
                lgaDropdown.innerHTML = '<option value="" disabled selected>Select your LGA</option>';

                data.forEach(lga => {
                    const option = document.createElement('option');
                    option.value = `${lga.lga_id}, ${lga.lga}`;
                    option.textContent = lga.lga;
                    lgaDropdown.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
    }

    document.getElementById('stateUpdateForm').addEventListener('submit', function (event) {
        event.preventDefault(); 

        const stateValue = document.getElementById('state').value;
        const lgaValue = document.getElementById('lga').value;

        const [state_id, state] = stateValue.split(',');
        const [lga_id, lga] = lgaValue.split(',');

        console.log(`State: ${state_id}, ${state}`);
        console.log(`LGA: ${lga_id}, ${lga}`);

        const data = {
            phone_number: document.getElementById('phoneNumber').value,
            state: `${state_id}, ${state}`,
            lga: `${lga_id}, ${lga}`
        };
        console.log(data)
        fetch('/admin/dashboard', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(responseData => {
                Swal.fire({
                    icon: 'success',
                    title: 'Information Updated!',
                    text: 'Your state and LGA information have been updated successfully.',
                });
                setTimeout(() => {
                    window.location.reload()
                }, 2000)
            })
            .catch(error => {
                console.error('Error submitting data:', error);

                Swal.fire({
                    icon: 'error',
                    title: 'Submission Failed!',
                    text: 'There was an error while updating your information. Please try again later.',
                });
            });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stateModalEl = document.getElementById('stateModal');
        const stateModal = new bootstrap.Modal(stateModalEl, {
            backdrop: 'static', 
            keyboard: false    
        });

        const errorMessage = document.createElement('p');
        errorMessage.classList.add('text-danger', 'mt-2', 'fw-bold');
        errorMessage.textContent = 'You must complete your information before proceeding.';
        errorMessage.style.display = 'none'; 

        const modalFooter = stateModalEl.querySelector('.modal-footer');
        modalFooter.appendChild(errorMessage);

        const userState = <%- JSON.stringify(datatoPass) %>;
        if (userState.state === '0' || userState.state === 0) {
            stateModal.show();
        }

        stateModalEl.addEventListener('hide.bs.modal', function (event) {
            event.preventDefault(); 
            errorMessage.style.display = 'block'; 
        });

        stateModalEl.addEventListener('show.bs.modal', function () {
            errorMessage.style.display = 'none';
        });
    });
</script>

</script>