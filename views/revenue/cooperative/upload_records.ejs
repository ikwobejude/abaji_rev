<!doctype html>

<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed layout-compact" dir="ltr" data-theme="theme-default" data-assets-path="/assets/" data-template="vertical-menu-template" data-style="light">
  <head>
    <%- include('../../layout/head') %>
  </head>

  <body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
      <div class="layout-container">
        <!-- Menu -->

       <%- include('../../layout/aside') %>
        <!-- / Menu -->

        <!-- Layout container -->
        <div class="layout-page">
          <!-- Navbar -->

         <%- include('../../layout/side') %>

          <!-- / Navbar -->

          <!-- Content wrapper -->
          <div class="content-wrapper">
            <!-- Content -->

            <div class="container-xxl flex-grow-1 container-p-y">
                <!-- DataTable with Buttons -->
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-6"></div>
                            <div class="col-6" style="text-align: end;">
                                <button class="create-new btn btn-primary waves-effect waves-light">
                                    <i class="ti ti-plus me-sm-1"></i> <span class="d-none d-sm-inline-block">Add New Record</span>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                <div class="row">
                  <!-- Revenue by Year -->
                  <div class="col-md-5">
                    <div class="card-datatable table-responsive pt-0">
                      <table class="datatables-basic table">
                        <h5 class="p-7">REVENUES BY YEAR</h5>
                        <thead>
                          <tr>
                            <th></th>
                            <th>Year</th>
                            <th>Total Assessments</th>
                            <th>Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% revenue.forEach(item=> { %>
                            <tr>
                              <td></td>
                              <td>
                                <%= item.year %>
                              </td>
                              <td>
                                <%= item.total %>
                              </td>
                              <td>
                                <div class="dropdown">
                                  <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="ti ti-dots-vertical"></i>
                                  </button>
                                  <div class="dropdown-menu">
                                    <a class="dropdown-item" href="/admin/revenue_upload/view/<%= item.year %>">
                                      <i class="ti ti-eye me-1"></i>View more
                                    </a>
                                    <a class="dropdown-item" href="javascript:void(0);" onclick="deleteRecords('<%= item.year %>')">
                                      <i class="ti ti-trash me-1"></i>Delete
                                    </a>
                                  </div>
                                </div>
                              </td>
                            </tr>
                            <% }) %>
                        </tbody>
                      </table>
                    </div>
                  </div>
                
                  <!-- Revenue by Batch -->
                  <div class="col-md-7">
                    <div class="card-datatable table-responsive pt-0">
                      <table class="datatables-basic table">
                        <h5 class="p-7">REVENUES BY BATCHES</h5>
                        <thead>
                          <tr>
                            <th></th>
                            <th>Batch</th>
                            <th>Total Assessments</th>
                            <th>Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% batchRevenue.forEach(item=> { %>
                            <tr>
                              <td></td>
                              <td>
                                <%= item.batch %>
                              </td>
                              <td>
                                <%= item.total %>
                              </td>
                              <td>
                                <div class="dropdown">
                                  <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="ti ti-dots-vertical"></i>
                                  </button>
                                  <div class="dropdown-menu">
                                    <a class="dropdown-item" href="/admin/revenue_upload/view/batch/<%= item.batch %>">
                                      <i class="ti ti-eye me-1"></i>View more
                                    </a>
                                    <% if(item.status_count != item.total ) {%>
                                    <a class="dropdown-item" href="javascript:;"
                                      onclick="generatePay_code('<%= item.batch %>')">
                                      <i class="ti ti-reload me-1"></i>Generate Pay code 
                                    </a>
                                    <% } %>
                                    <a class="dropdown-item" href="javascript:void(0);"
                                      onclick="deleteRecords('<%= item.batch %>')">
                                      <i class="ti ti-trash me-1"></i>Delete
                                    </a>
                                    
                                  </div>
                                </div>
                              </td>
                            </tr>
                            <% }) %>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>

                </div>
                <!-- Modal to add new record -->
                <div class="offcanvas offcanvas-end" id="add-new-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="exampleModalLabel">Upload new assessments</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="add-new-record pt-0 row g-2" id="form-upload-new-record" onsubmit="return false">
                      
                      
                      <div class="col-sm-12">
                        <label class="form-label" for="basicEmail">Upload Assessments</label>
                        <div class="input-group input-group-merge">
                          <span class="input-group-text"><i class="ti ti-file"></i></span>
                          <input type="file" name="upload_excel" id="upload_excel" class="form-control" accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" />
                          <input type="hidden" id="base64url" name="base64url">
                        </div>
                        <div class="form-text" style="color: red;">Only excel file are allowed</div>
                      </div>
                      
                      
                      <div class="col-sm-12">
                        <button type="submit" class="btn btn-primary data-submit me-sm-4 me-1">
                            <span class="spinner-border" role="status" aria-hidden="true"></span>&nbsp;
                            Submit
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">Cancel</button>
                      </div>
                    </form>
                  </div>
                </div>
                <!--/ DataTable with Buttons -->
  
               
  
  
                
              </div>
              <!-- / Content -->

        <%- include('../../layout/footer') %>
         <!-- Page JS -->
    <script src="/assets/js/tables-datatables-basic.js"></script>
    <script>
          if(document.getElementById("form-upload-new-record")) {
            $(".spinner-border").hide()
            const dt = document.getElementById("form-upload-new-record");
            dt.addEventListener("submit", async function(e) {
                e.preventDefault();
                $(".spinner-border").show()
                const data = new FormData(dt);
                const payload = {
                  base64url: data.get("base64url"),
                }

                // console.log(payload)

                try {
                    const request = await fetch('/admin/revenue_upload', {
                        method: "post",
                        body: JSON.stringify(payload),
                        headers: {
                            "Content-Type": "application/json"
                        }
                    })
                    const response = await request.json()
                    $(".spinner-border").hide()
                    if(response.status == true) {
                        toastr.success(response.message);
                        setTimeout(() => {
                          location.reload()
                        }, "3000");
                    } else {
                        // for errors - red box
                        toastr.error(response.message);
                    }
                } catch (error) {
                    $(".spinner-border").hide()
                    // for errors - red box
                    toastr.error(error.message);
                }
            })
        }
    
        
        const fileInput = document.getElementById('upload_excel');
          //  console.log(fileInput)
        fileInput.addEventListener('change', async (e) => {
            // console.log("Hi")
            try {
              $('#cover-spin').show(0)
                const file = fileInput.files[0];

                const reader = new FileReader();
                reader.addEventListener('load', async () => {
                    // console.log(reader.result)
                    $('#cover-spin').hide(0)
                    $('#base64url').val(reader.result)
                })

                reader.readAsDataURL(file)
            } catch (error) {
              $('#cover-spin').hide(0)
                toastr.error(error.message)
            }
        });

        async function deleteRecords(year) {
          // console.log(year)
          if(confirm('Do you want to delete?')) {
            try {
                const response = await fetch(`/admin/revenue_upload?year=${year}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        // Add any other headers if necessary, e.g., Authorization
                    }
                })
                // console.log(response)
                if (response.ok) {
                    const d = await response.json(); // or response.text() if expecting plain text
                    if(d.status == true) {
                      toastr.success(d.message);
                      setTimeout(() => {
                        location.reload()
                      }, "3000");
                    } else {
                      toastr.error(d.message);
                    }
                  
                } else {
                  toastr.error('Failed to delete the resource.');
                    // throw new Error();
                }
              } catch (error) {
                toastr.error(error.message);
              }
          }
          
        }
   
        async function generatePay_code(id) {
          if(confirm('Do you want to generate pay code?')) {
            try {
                const response = await fetch(`/admin/generate_budpay_pay_code?id=${id}`)
                // console.log(response)
                if (response.ok) {
                    const d = await response.json(); // or response.text() if expecting plain text
                    if(d.status == true) {
                      toastr.success(d.message);
                      setTimeout(() => {
                        location.reload()
                      }, "3000");
                    } else {
                      toastr.error(d.message);
                    }
                  
                } else {
                  toastr.error('Failed to generate pay code for the resource.');
                    // throw new Error();
                }
              } catch (error) {
                toastr.error(error.message);
              }
          }
          
        }
   </script>
  </body>
</html>
