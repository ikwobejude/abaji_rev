<!doctype html>

<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed layout-compact" dir="ltr"
  data-theme="theme-default" data-assets-path="/assets/" data-template="vertical-menu-template" data-style="light">

<head>
  <%- include('../../layout/head') %>
</head>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <!-- Menu -->

      <%- include('../../layout/aside') %>
        <!-- / Menu -->

        <!-- Layout container -->
        <div class="layout-page">
          <!-- Navbar -->

          <%- include('../../layout/side') %>

            <!-- / Navbar -->

            <!-- Content wrapper -->
            <div class="content-wrapper">
              <!-- Content -->

              <div class="container-xxl flex-grow-1 container-p-y">
                <!-- DataTable with Buttons -->
                <div class="card">
                  <div class="card-header">
                    <div class="row">
                      <div class="col-6"></div>
                      <div class="col-6" style="text-align: end;">
                        <button class="create-new btn btn-primary waves-effect waves-light">
                          <i class="ti ti-plus me-sm-1"></i> <span class="d-none d-sm-inline-block">Add New
                            Record</span>
                        </button>
                      </div>
                    </div>
                  </div>

                  <div class="card-datatable  table-responsive pt-0">
                    <table class="datatables-basic table">
                      <thead>
                        <tr>
                          <!-- <th></th> -->
                          <th></th>
                          <th>Revenue</th>
                          <th>Time line</th>
                          <th>Item Name</th>
                          <th>Item Code</th>
                          <th>Amount</th>
                          <th>Action</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% rows.forEach(item=> { %>
                          <tr>
                            <td></td>
                            <td>
                              <%= item.code==11111111 ? "TICKET" : "TAX ITEMS" %>
                            </td>
                            <td>
                              <% if(item.code==11111111){%>
                                <%= item.item_code==1 ? "Daily" : "Every 4 Days" %>
                              <% } %>
                            </td>
                            <td>
                              <%= item.item_code %>
                            </td>
                            <td>
                              <%= item.revenue_item %>
                            </td>
                            <td>
                              <%= item.amount %>
                            </td>
                            <td class="d-flex align-items-center">
                              <i class="ti ti-pencil edit-icon" data-id="<%= item.itemID %>"
                                data-revenue-line="<%= item.code == 11111111 ? 'TICKET' : 'TAX REVENUE' %>"
                                data-timeline="<%= item.item_code == 1 ? 'Daily' : 'Every 4 Days' %>"
                                data-name="<%= item.revenue_item %>" data-amount="<%= item.amount %>"
                                style="cursor: pointer; margin-right: 10px;"></i>
                              <i class="ti ti-trash delete-icon" data-id="<%= item.itemID %>" style="cursor: pointer;"
                                data-bs-toggle="modal" data-bs-target="#delete-confirmation-modal"></i></i>
                            </td>
                          </tr>
                          <% }) %>
                      </tbody>

                    </table>
                  </div>
                </div>
                <!-- Modal to add new record -->
                <div class="offcanvas offcanvas-end" id="add-new-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="exampleModalLabel">New Record</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="add-new-record pt-0 row g-2" id="form-add-new-record" onsubmit="return false">
                      <div class="col-sm-12">
                        <label class="form-label" for="basicFullname">Revenue Line</label>
                        <div class="input-group input-group-merge">
                          <span id="basicFullname2" class="input-group-text"><i class="ti ti-briefcase"></i></span>
                          <select name="revenue_line" id="revenue_line" class="form-control dt-full-name">
                            <option value="">Select Revenue line</option>
                            <option value="Ticket">Ticket</option>
                            <option value="Tax Item">Tax Item</option>
                          </select>
                          <!-- <input type="text" id="" class="form-control dt-full-name" name="" placeholder="John Doe" aria-label="John Doe" aria-describedby="basicFullname2" /> -->
                        </div>
                      </div>

                      <div class="col-sm-12" id="timeline-field">
                        <label class="form-label" for="basicPost">Timeline</label>
                        <div class="input-group input-group-merge">
                          <span id="basicPost2" class="input-group-text"><i class="fa fa-time"></i></span>
                          <select name="timeline" id="timeline" class="form-control dt-full-name">
                            <option value="">Select Timeline</option>
                            <option value="1">Daily</option>
                            <option value="4">Every 4 Days</option>
                          </select>
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <label class="form-label" for="basicEmail">Revenue</label>
                        <div class="input-group input-group-merge">
                          <!-- <span class="input-group-text"><i class="ti ti-mail"></i></span> -->
                          <input type="text" id="name" name="name" class="form-control dt-name" placeholder="Loading"
                            aria-label="" />
                        </div>
                        <div class="form-text">Item name</div>
                      </div>
                      <!-- <div class="col-sm-12">
                        <label class="form-label" for="basicDate">Joining Date</label>
                        <div class="input-group input-group-merge">
                          <span id="basicDate2" class="input-group-text"><i class="ti ti-calendar"></i></span>
                          <input type="text" class="form-control dt-date" id="basicDate" name="basicDate" aria-describedby="basicDate2" placeholder="MM/DD/YYYY" aria-label="MM/DD/YYYY" />
                        </div>
                      </div> -->
                      <div class="col-sm-12">
                        <label class="form-label" for="basicSalary">Amount</label>
                        <div class="input-group input-group-merge">
                          <span id="basicSalary2" class="input-group-text">â‚¦</span>
                          <input type="number" id="Amount" name="Amount" class="form-control dt-salary"
                            placeholder="12000" aria-label="12000" aria-describedby="basicSalary2" />
                        </div>
                      </div>
                      <div class="col-sm-12">
                        <button type="submit" class="btn btn-primary data-submit me-sm-4 me-1">
                          <span class="spinner-border" role="status" aria-hidden="true"></span>&nbsp;
                          Submit
                        </button>
                        <button type="reset" class="btn btn-outline-secondary"
                          data-bs-dismiss="offcanvas">Cancel</button>
                      </div>
                    </form>
                  </div>
                </div>
                <!--/ DataTable with Buttons -->
                <!-- Edit Record Modal -->
                <div class="offcanvas offcanvas-end" tabindex="-1" id="edit-new-record"
                  aria-labelledby="editNewRecordLabel">
                  <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="editNewRecordLabel">Edit Record</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body">
                    <form id="edit-record-form">
                      <div class="mb-3">
                        <label for="edit-revenue-line" class="form-label">Revenue Line</label>
                        <select id="edit-revenue-line" name="revenue_line" class="form-control">
                          <option value="Ticket">Ticket</option>
                          <option value="Tax Item">Tax Item</option>
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="edit-timeline" class="form-label">Timeline</label>
                        <select id="edit-timeline" name="timeline" class="form-control">
                          <option value="1">Daily</option>
                          <option value="4">Every 4 Days</option>
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="edit-name" class="form-label">Item Name</label>
                        <input type="text" id="edit-name" name="name" class="form-control" required />
                      </div>
                      <div class="mb-3">
                        <label for="edit-amount" class="form-label">Amount</label>
                        <input type="number" id="edit-amount" name="amount" class="form-control" required />
                      </div>
                      <button type="submit" class="btn btn-primary">Save changes</button>
                    </form>
                  </div>
                </div>


                <!-- Delete Confirmation Modal -->
                <div class="modal fade" id="delete-confirmation-modal" tabindex="-1"
                  aria-labelledby="deleteConfirmationLabel" aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="deleteConfirmationLabel">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        Are you sure you want to delete this item?
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirm-delete-btn">Delete</button>
                      </div>
                    </div>
                  </div>
                </div>

              </div>
              <!-- / Content -->

              <%- include('../../layout/footer') %>
                <!-- Page JS -->
                <script src="/assets/js/tables-datatables-basic.js"></script>
                <script>
                  if (document.getElementById("form-add-new-record")) {
                    $(".spinner-border").hide()
                    const dt = document.getElementById("form-add-new-record");
                    dt.addEventListener("submit", async function (e) {
                      e.preventDefault();
                      $(".spinner-border").show()
                      const data = new FormData(dt);
                      const payload = {
                        revenue_line: data.get("revenue_line"),
                        timeline: data.get("timeline"),
                        name: data.get("name"),
                        Amount: data.get("Amount")
                      }

                      console.log(payload)

                      try {
                        const request = await fetch('/setup/ticket_item', {
                          method: "post",
                          body: JSON.stringify(payload),
                          headers: {
                            "Content-Type": "application/json"
                          }
                        })
                        const response = await request.json()
                        $(".spinner-border").hide()
                        if (response.status == true) {
                          toastr.success(response.message);
                          setTimeout(() => {
                            location.reload()
                          }, "3000");
                        } else {
                          toastr.error(response.message);
                        }
                      } catch (error) {
                        $(".spinner-border").hide()
                        toastr.error(error.message);
                      }
                    })
                  }
                </script>

                <script>
                  document.querySelectorAll('.edit-icon').forEach(icon => {
                    icon.addEventListener('click', function () {
                      const revenueLine = this.getAttribute('data-revenue-line');
                      const timeline = this.getAttribute('data-timeline');
                      const name = this.getAttribute('data-name');
                      const amount = this.getAttribute('data-amount');
                      const itemId = this.getAttribute('data-id');

                      // Populate the modal input fields with the data
                      document.getElementById('edit-revenue-line').value = revenueLine === "TICKET" ? "Ticket" : "Tax Item";
                      document.getElementById('edit-timeline').value = timeline === "Daily" ? "1" : "4";
                      document.getElementById('edit-name').value = name;
                      document.getElementById('edit-amount').value = amount;

                      // Show the modal
                      const modal = new bootstrap.Offcanvas(document.getElementById('edit-new-record'));
                      modal.show();

                      // Handle form submission for editing
                      document.getElementById('edit-record-form').onsubmit = async function (e) {
                        e.preventDefault();
                        const updatedData = {
                          revenue_line: document.getElementById('edit-revenue-line').value,
                          timeline: document.getElementById('edit-timeline').value,
                          name: document.getElementById('edit-name').value,
                          amount: document.getElementById('edit-amount').value
                        };
                        console.log(itemId)
                        try {
                          const request = await fetch(`/setup/ticket_item/${itemId}`, {
                            method: 'PUT',
                            headers: {
                              'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(updatedData)
                          });
                          const response = await request.json();

                          if (response.status === true) {
                            toastr.success(response.message);
                            setTimeout(() => location.reload(), 1500);
                          } else {
                            toastr.error(response.message);
                          }
                        } catch (error) {
                          toastr.error('Error updating item');
                        }
                      };
                    });
                  });

                  document.addEventListener('DOMContentLoaded', () => {
                    const deleteIcons = document.querySelectorAll('.delete-icon');
                    let selectedItemId = null;
                    deleteIcons.forEach(icon => {
                      icon.addEventListener('click', function () {
                        selectedItemId = this.dataset.id;
                      });
                    });

                    // Handle Delete Confirmation
                    document.getElementById('confirm-delete-btn').addEventListener('click', async () => {
                      if (!selectedItemId) return;

                      try {
                        const response = await fetch(`/setup/ticket_item/${selectedItemId}`, {
                          method: 'DELETE'
                        });
                        const data = await response.json();
                        toastr.success('Record deleted successfully!');
                        location.reload();
                      } catch (error) {
                        toastr.error('An error occurred. Please try again.');
                      }
                    });
                  });

                  document.addEventListener('DOMContentLoaded', () => {
                    const revenueLineSelect = document.getElementById('revenue_line');
                    const timelineField = document.getElementById('timeline-field');

                    // Function to toggle the visibility of the timeline field
                    const toggleTimelineField = () => {
                      const selectedValue = revenueLineSelect.value;
                      if (selectedValue === 'Tax Item') {
                        timelineField.style.display = 'none'; 
                      } else {
                        timelineField.style.display = 'block';
                      }
                    };
                    revenueLineSelect.addEventListener('change', toggleTimelineField);
                    toggleTimelineField();
                  });

                </script>
</body>

</html>