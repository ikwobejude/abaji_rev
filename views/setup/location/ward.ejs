<!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed layout-compact" dir="ltr"
  data-theme="theme-default" data-assets-path="/assets/" data-template="vertical-menu-template" data-style="light">

<head>
  <%- include('../../layout/head') %>
</head>
<style>
  .offcanvas-backdrop {
    opacity: 0.5 !important;
  }
</style>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <!-- Menu -->
      <%- include('../../layout/aside') %>
        <!-- / Menu -->

        <!-- Layout container -->
        <div class="layout-page">
          <!-- Navbar -->
          <%- include('../../layout/side') %>
            <!-- / Navbar -->

            <!-- Content wrapper -->
            <div class="content-wrapper">
              <!-- Content -->
              <div class="container-xxl flex-grow-1 container-p-y">
                <!-- DataTable with Buttons -->
                <div class="card">
                  <div class="card-header">
                    <div class="row">
                      <div class="col-6"></div>
                      <div class="col-6" style="text-align: end">
                        <!-- <button class="create-new btn btn-primary waves-effect waves-light" data-bs-toggle="offcanvas"
                          data-bs-target="#add-new-record">
                          <i class="ti ti-plus me-sm-1"></i>
                          <span class="d-none d-sm-inline-block">Add New Record</span>
                        </button> -->
                      </div>
                    </div>
                  </div>

                  <div class="card-datatable table-responsive pt-0">
                    <table id="" class="table">
                      <thead>
                        <tr>
                          <th>LGA</th>
                          <th>City</th>
                          <!-- <th style="width: 20%">Actions</th> -->
                        </tr>
                      </thead>

                      <tbody>
                        <% if (wards.length> 0) { %>
                          <% let first=true; %>
                            <% for (let i=0; i < wards.length; i++) { %>
                              <tr>
                                <% if (first) { %>
                                  <td style="background-color: #f2f2f2; font-weight: bold"
                                    rowspan="<%= wards.length %>">
                                    <%= wards[i].lga %>
                                  </td>
                                  <% first=false; %>
                                    <% } %>
                                      <td style="text-align: left; font-weight: normal">
                                        <%= wards[i].areaname %>
                                      </td>

                              </tr>
                              <% } %>
                                <% } else { %>
                                  <tr>
                                    <td colspan="3" style="text-align: center;">No wards available</td>
                                  </tr>
                                  <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
                <!-- / DataTable with Buttons -->

                <!-- Modal to add new record -->
                <div class="offcanvas offcanvas-end" id="add-new-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="exampleModalLabel">
                      New Record
                    </h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="add-new-record pt-0 row g-2" id="form-add-new-record" onsubmit="return false">
                      <div class="col-sm-12">
                        <label class="form-label" for="basicFullname">LOCAL GOVERNMENT</label>
                        <div class="input-group input-group-merge">
                          <span id="basicFullname2" class="input-group-text"><i class="ti ti-briefcase"></i></span>
                          <select name="lga" id="lga" class="form-control dt-full-name" required>
                            <option value="">Select LGa</option>

                          </select>
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <label class="form-label" for="basicEmail">Ward</label>
                        <div class="input-group input-group-merge">
                          <input type="text" id="ward" name="ward" class="form-control dt-name" placeholder="Ward"
                            aria-label="" required />
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <button type="submit" class="btn btn-primary data-submit me-sm-4 me-1">
                          <span class="spinner-border" role="status" aria-hidden="true"></span>&nbsp; Submit
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">
                          Cancel
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
                <!-- / Modal to add new record -->

                <!-- Modal to edit record -->
                <div class="offcanvas offcanvas-end" id="edit-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="exampleModalLabel">
                      Edit Record
                    </h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="edit-record pt-0 row g-2" id="form-edit-record" onsubmit="return false">
                      <input type="hidden" id="edit-id" name="id" />
                      <div class="col-sm-12">
                        <label class="form-label" for="edit-lga">LOCAL GOVERNMENT</label>
                        <div class="input-group input-group-merge">
                          <span id="edit-lga2" class="input-group-text"><i class="ti ti-briefcase"></i></span>
                          <select name="lga" id="edit-lga" class="form-control dt-full-name" required>
                            <option value="">Select LGa</option>

                          </select>
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <label class="form-label" for="edit-ward">Ward</label>
                        <div class="input-group input-group-merge">
                          <input type="text" id="edit-ward" name="ward" class="form-control dt-name" placeholder="Ward"
                            aria-label="" required />
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <button type="submit" class="btn btn-primary data-submit me-sm-4 me-1">
                          <span class="spinner-border" role="status" aria-hidden="true"></span>&nbsp; Submit
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">
                          Cancel
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
              <!-- / Content -->
              <!-- Delete Confirmation -->
              <div class="modal fade" id="delete-confirmation-modal" tabindex="-1"
                aria-labelledby="deleteConfirmationLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="deleteConfirmationLabel">
                        Confirm Deletion
                      </h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      Are you sure you want to delete this item?
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                      </button>
                      <button type="button" class="btn btn-danger" id="confirm-delete-btn">
                        Delete
                      </button>
                    </div>
                  </div>
                </div>
              </div>

              <%- include('../../layout/footer') %>

                <!-- Page JS -->
                <script src="/assets/js/tables-datatables-basic.js"></script>
                <script>
                  $(document).ready(function () {
                    $("#DataTables_Table_0").DataTable();
                  });

                  if (document.getElementById("form-add-new-record")) {
                    $(".spinner-border").hide();
                    const addForm = document.getElementById("form-add-new-record");
                    addForm.addEventListener("submit", async function (e) {
                      e.preventDefault();
                      $(".spinner-border").show();
                      const data = new FormData(addForm);
                      const payload = {
                        lga: data.get("lga"),
                        ward: data.get("ward"),
                      };

                      try {
                        const response = await fetch("/setup/ward", {
                          method: "post",
                          body: JSON.stringify(payload),
                          headers: {
                            "Content-Type": "application/json",
                          },
                        });
                        const result = await response.json();
                        $(".spinner-border").hide();
                        if (result.status) {
                          toastr.success(result.message);
                          setTimeout(() => {
                            location.reload();
                          }, 3000);
                        } else {
                          toastr.error(result.message);
                        }
                      } catch (error) {
                        $(".spinner-border").hide();
                        toastr.error(error.message);
                      }
                    });
                  }

                  // Handle edit button click
                  document.addEventListener("click", function (e) {
                    if (e.target.classList.contains("edit-btn")) {
                      const id = e.target.getAttribute("data-id");
                      const lga = e.target.getAttribute("data-lga");
                      const city = e.target.getAttribute("data-city");

                      document.getElementById("edit-id").value = id;
                      document.getElementById("edit-lga").value = lga;
                      document.getElementById("edit-ward").value = city;
                    }

                    if (e.target.classList.contains("delete-btn")) {
                      const id = e.target.getAttribute("data-id");
                      // Show delete confirmation modal
                      $("#delete-confirmation-modal").modal("show");
                      // Pass ID to the confirm delete button
                      document
                        .getElementById("confirm-delete-btn")
                        .setAttribute("data-id", id);
                    }
                  });

                  // Handle delete confirmation
                  document
                    .getElementById("confirm-delete-btn")
                    .addEventListener("click", function () {
                      const id = this.getAttribute("data-id");
                      fetch(`/setup/ward/${id}`, {
                        method: "DELETE",
                        headers: {
                          "Content-Type": "application/json",
                        },
                      })
                        .then((response) => response.json())
                        .then((result) => {
                          if (result.status) {
                            toastr.success(result.message);
                            setTimeout(() => {
                              location.reload();
                            }, 3000);
                          } else {
                            toastr.error(result.message);
                          }
                        })
                        .catch((error) => {
                          toastr.error(error.message);
                        });
                      // Close the modal
                      $("#delete-confirmation-modal").modal("hide");
                    });

                  if (document.getElementById("form-edit-record")) {
                    $(".spinner-border").hide();
                    const editForm = document.getElementById("form-edit-record");
                    editForm.addEventListener("submit", async function (e) {
                      e.preventDefault();
                      $(".spinner-border").show();
                      const data = new FormData(editForm);
                      const payload = {
                        id: data.get("id"),
                        lga: data.get("lga"),
                        ward: data.get("ward"),
                      };

                      try {
                        const response = await fetch(`/setup/ward/${payload.id}`, {
                          method: "put",
                          body: JSON.stringify(payload),
                          headers: {
                            "Content-Type": "application/json",
                          },
                        });
                        const result = await response.json();
                        $(".spinner-border").hide();
                        if (result.status) {
                          toastr.success(result.message);
                          setTimeout(() => {
                            location.reload();
                          }, 3000);
                        } else {
                          toastr.error(result.message);
                        }
                      } catch (error) {
                        $(".spinner-border").hide();
                        toastr.error(error.message);
                      }
                    });
                  }


                  document.addEventListener('click', function (event) {
                    if (!event.target.closest('.offcanvas') && document.querySelector('.offcanvas.show')) {
                      const offcanvas = bootstrap.Offcanvas.getInstance(document.querySelector('.offcanvas.show'));
                      offcanvas.hide();
                    }
                  });
                  document.addEventListener('hidden.bs.offcanvas', function () {
                    const backdrops = document.querySelectorAll('.offcanvas-backdrop');
                    backdrops.forEach((backdrop) => backdrop.remove());
                  });
                </script>
            </div>
        </div>
    </div>
  </div>
</body>

</html>