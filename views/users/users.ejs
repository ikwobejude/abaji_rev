<!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed layout-compact" dir="ltr"
  data-theme="theme-default" data-assets-path="/assets/" data-template="vertical-menu-template" data-style="light">

<head>
  <%- include('../layout/head') %>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.1/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
      .tag {
          display: inline-block;
          background-color: #e0e0e0;
          color: #333;
          padding: 2px 5px;
          margin: 5px;
          border-radius: 15px;
          font-size: 12px;
          font-family: Arial, sans-serif;
          cursor: pointer;
          box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);
      }
      .tag:hover {
          background-color: #ccc;
      }
  </style>
</head>
<style>
  .offcanvas-backdrop {
    opacity: 0.5 !important;
  }
</style>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <!-- Menu -->
      <%- include('../layout/aside') %>
        <!-- / Menu -->

        <!-- Layout container -->
        <div class="layout-page">
          <!-- Navbar -->
          <%- include('../layout/side') %>
            <!-- / Navbar -->

            <!-- Content wrapper -->
            <div class="content-wrapper">
              <!-- Content -->
              <div class="container-xxl flex-grow-1 container-p-y">
                <!-- DataTable with Buttons -->
                <div class="card">
                  <div class="card-header">
                    <div class="row">
                      <div class="col-6"></div>
                      <div class="col-6" style="text-align: end">
                        <button class="create-new btn btn-primary waves-effect waves-light" data-bs-toggle="offcanvas"
                          data-bs-target="#add-new-record">
                          <i class="ti ti-plus me-sm-1"></i>
                          <span class="d-none d-sm-inline-block">Add New Record</span>
                        </button>
                      </div>
                    </div>
                  </div>

                  <div class="card-datatable table-responsive pt-0">
                    <table class="table" id="userTable">
                      <thead>
                        <tr>
                          <th>#</th>
                          <th>Full Name</th>
                          <th>Email</th>
                          <th>Role</th>
                          <th>Permissions</th>
                          <th>Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% const roleLookup={}; user_role.forEach(role=> {
                          roleLookup[role.group_id] = role.group_name; }); %> <% users.forEach((usr, index)=> { %>
                            <tr>
                              <td>
                                <%= index + 1 %>
                              </td>
                              <td>
                                <%= usr.name %>
                              </td>
                              <td>
                                <%= usr.email %>
                              </td>
                              <td>
                                <%= roleLookup[usr.group_id] || 'Unknown' %>
                              </td>
                              <td>
                                <% if (usr.permissions && usr.permissions.length> 0) { 
                                  usr?.permissions?.split(',').forEach(word => { %>
                                    <span class="tag"><%- word %></span>
                                    <% }) %>
                                <% } else { %>
                                    No permissions
                                <% } %>

                              </td>
                              <td>
                                <div class="dropdown">
                                  <button type="button" class="btn p-0 dropdown-toggle hide-arrow"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="ti ti-dots-vertical"></i>
                                  </button>
                                  <div class="dropdown-menu dropdown-menu-end">
                                    <!-- Edit Button -->
                                    <button class="dropdown-item edit-btn btn btn-warning btn-sm d-flex "
                                      data-id="<%= usr.uid %>" data-name="<%= usr.name %>"
                                      data-user-phone="<%= usr.user_phone %>" data-email="<%= usr.email %>"
                                      data-group-id="<%= usr.group_id %>" data-bs-toggle="offcanvas"
                                      data-bs-target="#edit-user-record">
                                      <i class="ti ti-pencil me-1"></i>Edit
                                    </button>
                                    <!-- Edit Button -->
                                    <button class="dropdown-item delete-btn btn btn-danger btn-sm"
                                      data-id="<%= usr.uid %>">
                                      <i class="ti ti-trash me-1"></i>Delete
                                    </button>
                                    <button
                                      class="dropdown-item permissions-btn btn btn-sm btn-secondary add-permission-btn"
                                      data-id="<%= usr.uid %>"
                                      data-permissions="<%= usr.permissions ? usr.permissions : '' %>"
                                      data-bs-target="#add-permission-offcanvas" data-bs-toggle="offcanvas">
                                      <i class="ti ti-key me-1"></i> Add Permissions
                                    </button>




                                  </div>
                                </div>

                              </td>
                            </tr>
                            <% }) %>
                      </tbody>
                    </table>
                  </div>
                </div>

                <!-- Offcanvas to add/edit record -->
                <div class="offcanvas offcanvas-end" id="add-new-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="offcanvasLabel">
                      Add New User
                    </h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="add-new-record pt-0 row g-2" id="form-upload-new-record" onsubmit="return false">
                      <input type="hidden" id="user-id" name="user-id" value="" />

                      <div class="col-12">
                        <label class="form-label" for="name">First Name</label>
                        <input type="text" id="firstname" name="firstname" class="form-control" placeholder="First Name"
                          required />
                      </div>

                      <div class="col-12">
                        <label class="form-label" for="name">Middle Name</label>
                        <input type="text" id="middlename" name="middlename" class="form-control"
                          placeholder="Middle Name" />
                      </div>
                      <div class="col-12">
                        <label class="form-label" for="name">Last Name</label>
                        <input type="text" id="surname" name="surname" class="form-control" placeholder="Surname"
                          required />
                      </div>
                      <div class="col-12">
                        <label class="form-label" for="user_phone">Phone</label>
                        <input type="number" id="user_phone" name="user_phone" class="form-control"
                          placeholder="Phone Number" />
                      </div>

                      <div class="col-12">
                        <label class="form-label" for="email">Email Address</label>
                        <input type="email" id="email" name="email" class="form-control" placeholder="Email Address" />
                      </div>

                      <div class="col-12 col-md-6">
                        <label class="form-label" for="password">Password</label>
                        <input type="password" id="password" name="password" class="form-control"
                          placeholder="Password" />
                      </div>

                      <div class="col-12 col-md-6">
                        <label class="form-label" for="group_id">User Role</label>
                        <select id="group_id" name="group_id" class="select2 form-select" data-allow-clear="true">
                          <option value="">Select</option>
                          <% user_role.forEach((role)=> { %>
                            <option value="<%= role.group_id %>">
                              <%= role.group_name %>
                            </option>
                            <% }) %>
                        </select>
                      </div>

                      <div class="col-sm-12">
                        <button type="submit" id="submit-btn" class="btn btn-primary me-sm-4 me-1">
                          <span class="spinner-border d-none" id="loading-spinner" role="status"
                            aria-hidden="true"></span>
                          &nbsp;Submit
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">
                          Cancel
                        </button>
                      </div>
                    </form>
                  </div>
                </div>

                <!-- Offcanvas to add permissions -->
                <div class="offcanvas offcanvas-end" id="add-permission-offcanvas">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="offcanvasLabel">Add Permissions</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="add-permission-form pt-0 row g-2" id="add-permission-form" onsubmit="return false">
                      <input type="hidden" id="permission-user-id" name="user-id" value="" />

                      <div class="permissions-container">
                        <div class="col-12 permission-item">
                          <label class="form-label" for="permission-type">Permission Type</label>
                          <select name="permission_type[]" class="select2 form-select" multiple data-allow-clear="true">
                            <!-- <option value="" class="select-permission">Select Permission</option> -->
                            <% permission.forEach((type)=> { %>
                              <option value="<%= type.permission_id %>">
                                <%= type.permission_name %>
                              </option>
                              <% }) %>
                          </select>
                        </div>
                      </div>

                      <div class="col-sm-12">
                        <!-- <button type="button" id="add-more-permissions" class="btn btn-secondary me-sm-4 me-1">Add More
                          Permissions</button> -->
                        <button type="submit" id="add-permission-submit-btn" class="btn btn-primary me-sm-4 me-1">
                          <span class="spinner-border d-none" id="add-permission-loading-spinner" role="status"
                            aria-hidden="true"></span>
                          &nbsp;Add Permissions
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">
                          Cancel
                        </button>
                      </div>
                    </form>
                  </div>
                </div>


                <!-- Offcanvas to edit record -->
                <div class="offcanvas offcanvas-end" id="edit-user-record">
                  <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="offcanvasLabel">Edit User</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                      aria-label="Close"></button>
                  </div>
                  <div class="offcanvas-body flex-grow-1">
                    <form class="edit-user-record pt-0 row g-2" id="edit-user-form" onsubmit="return false">
                      <input type="hidden" id="edit-user-id" name="user-id" value="" />

                      <div class="col-12">
                        <label class="form-label" for="edit-name">Full Name</label>
                        <input type="text" id="edit-name" name="name" class="form-control" placeholder="John Doe" />
                      </div>

                      <div class="col-12">
                        <label class="form-label" for="edit-user_phone">Phone</label>
                        <input type="number" id="edit-user_phone" name="user_phone" class="form-control"
                          placeholder="Phone Number" />
                      </div>

                      <div class="col-12">
                        <label class="form-label" for="edit-email">Email Address</label>
                        <input type="email" id="edit-email" name="email" class="form-control"
                          placeholder="Email Address" />
                      </div>

                      <div class="col-12 col-md-6">
                        <label class="form-label" for="edit-group_id">User Role</label>
                        <select id="edit-group_id" name="group_id" class="select2 form-select" data-allow-clear="true">
                          <option value="">Select</option>
                          <% user_role.forEach((role)=> { %>
                            <option value="<%= role.group_id %>">
                              <%= role.group_name %>
                            </option>
                            <% }) %>
                        </select>
                      </div>

                      <div class="col-sm-12">
                        <button type="submit" id="edit-submit-btn" class="btn btn-primary me-sm-4 me-1">
                          <span class="spinner-border d-none" id="edit-loading-spinner" role="status"
                            aria-hidden="true"></span>
                          &nbsp;Save Changes
                        </button>
                        <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">
                          Cancel
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
                <!-- Confirmation Modal -->
                <div class="modal fade" id="confirm-delete-modal" tabindex="-1" aria-labelledby="confirmDeleteLabel"
                  aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="confirmDeleteLabel">
                          Confirm Deletion
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        Are you sure you want to delete this user?
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                          Cancel
                        </button>
                        <button type="button" class="btn btn-danger" id="confirm-delete-btn">
                          Delete
                        </button>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Toast Container -->
                <div class="toast-container position-fixed top-0 end-0 p-3">
                  <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                      <strong class="me-auto">Notification</strong>
                      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body" id="toast-message"></div>
                  </div>
                </div>
              </div>

              <%- include('../layout/footer') %>
            </div>
        </div>
    </div>
  </div>

  <!-- Include Bootstrap JS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.1/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.x/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

  <script src="/assets/js/tables-datatables-basic.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <!-- <script src="/assets/vendor/libs/toastr/toastr.js"></script>
  <script src="/assets/js/ui-toasts.js"></script> -->
  <script src="/assets/vendor/libs/bootstrap-select/bootstrap-select.js"></script>
  <script src="/assets/js/forms-selects.js"></script>

  <!-- Main JS -->
  <script src="/assets/js/main.js"></script>

  <!-- Page JS -->
  <script>
    $(document).ready(function () {
      $("#userTable").DataTable({
        ordering: false,
      });
    });

    document.addEventListener('click', function (event) {
      if (!event.target.closest('.offcanvas') && document.querySelector('.offcanvas.show')) {
        const offcanvas = bootstrap.Offcanvas.getInstance(document.querySelector('.offcanvas.show'));
        offcanvas.hide();
      }
    });
    document.addEventListener('hidden.bs.offcanvas', function () {
      const backdrops = document.querySelectorAll('.offcanvas-backdrop');
      backdrops.forEach((backdrop) => backdrop.remove());
    });

    document.addEventListener("DOMContentLoaded", () => {
      function addPermissions(userId) {
        document.getElementById("permission-user-id").value = userId;
        $('#add-permission-offcanvas').offcanvas('show');
      }

      document.querySelectorAll(".edit-btn").forEach((button) => {
        button.addEventListener("click", function () {
          const userId = this.dataset.id;
          const name = this.dataset.name;
          const userPhone = this.dataset.userPhone;
          const email = this.dataset.email;
          const groupId = this.dataset.groupId;

          document.getElementById("edit-user-id").value = userId;
          document.getElementById("edit-name").value = name;
          document.getElementById("edit-user_phone").value = userPhone;
          document.getElementById("edit-email").value = email;
          document.getElementById("edit-group_id").value = groupId;

          const editOffcanvas = new bootstrap.Offcanvas(
            document.getElementById("edit-user-record")
          );
          editOffcanvas.show();
        });
      });

      document.querySelectorAll(".delete-btn").forEach((button) => {
        button.addEventListener("click", function () {
          deleteUserId = this.dataset.id;
          const deleteModal = new bootstrap.Modal(
            document.getElementById("confirm-delete-modal")
          );
          deleteModal.show();
        });
      });

      // Confirm Delete Button Click
      document
        .getElementById("confirm-delete-btn")
        .addEventListener("click", async () => {
          if (deleteUserId) {
            try {
              const response = await fetch(`/admin/user/${deleteUserId}`, {
                method: "DELETE",
              });

              const result = await response.json();
              if (response.ok) {
                toastr.success("User deleted successfully!");
                document
                  .querySelector(`.delete-btn[data-id="${deleteUserId}"]`)
                  .closest("tr")
                  .remove();
                window.location.reload();
              } else {
                toastr.error(result.message || "Failed to delete user.");
              }
            } catch (error) {
              toastr.error(
                "An error occurred while processing your request."
              );
            } finally {
              // Hide the modal
              const deleteModal = bootstrap.Modal.getInstance(
                document.getElementById("confirm-delete-modal")
              );
              deleteModal.hide();
            }
          }
        });

      // Handle form submission for adding new user
      document
        .getElementById("form-upload-new-record")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = {
            id: document.getElementById("user-id").value,
            firstname: document.getElementById("firstname").value,
            middlename: document.getElementById("middlename").value,
            surname: document.getElementById("surname").value,
            user_phone: document.getElementById("user_phone").value,
            email: document.getElementById("email").value,
            password: document.getElementById("password").value,
            group_id: document.getElementById("group_id").value,
          };

          const submitBtn = document.getElementById("submit-btn");
          const loadingSpinner = document.getElementById("loading-spinner");

          submitBtn.disabled = true;
          loadingSpinner.classList.remove("d-none");

          try {
            const method = "POST";
            const url = "/admin/user";

            const response = await fetch(url, {
              method,
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (response.ok) {
              toastr.success("User saved successfully!");
              document.getElementById("form-upload-new-record").reset();
              window.location.reload();
              const addOffcanvas = new bootstrap.Offcanvas(
                document.getElementById("add-new-record")
              );
              addOffcanvas.hide();
            } else {
              toastr.error(result.message || "Failed to save user.");
            }
          } catch (error) {
            toastr.error("An error occurred while processing your request.");
          } finally {
            loadingSpinner.classList.add("d-none");
            submitBtn.disabled = false;
          }
        });

      // Handle form submission for editing user
      document
        .getElementById("edit-user-form")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = {
            id: document.getElementById("edit-user-id").value,
            name: document.getElementById("edit-name").value,
            user_phone: document.getElementById("edit-user_phone").value,
            email: document.getElementById("edit-email").value,
            group_id: document.getElementById("edit-group_id").value,
          };

          const submitBtn = document.getElementById("edit-submit-btn");
          const loadingSpinner = document.getElementById(
            "edit-loading-spinner"
          );

          submitBtn.disabled = true;
          loadingSpinner.classList.remove("d-none");

          try {
            const response = await fetch(`/admin/user/${formData.id}`, {
              method: "PUT",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (response.ok) {
              toastr.success("User updated successfully!");
              window.location.reload();
              const editOffcanvas = bootstrap.Offcanvas.getInstance(
                document.getElementById("edit-user-record")
              );
              editOffcanvas.hide();
            } else {
              toastr.error(result.message || "Failed to update user.");
            }
          } catch (error) {
            toastr.error("An error occurred while processing your request.");
          } finally {
            loadingSpinner.classList.add("d-none");
            submitBtn.disabled = false;
          }
        });
    });
  </script>

  <script>
    $(document).ready(function () {
      let userId;

      $(document).on('click', '.add-permission-btn', function () {
        userId = $(this).data('id');
        let permissions = $(this).data('permissions');
        // console.log('Permissions:', permissions); 

        $('#permission-user-id').val(userId);
        $('select[name="permission_type[]"]').val(null).trigger('change');

        if (permissions) {
          const permissionArray = permissions.split(',').map(p => p.trim().toLowerCase());
          permissionArray.forEach(permission => {
            $('select[name="permission_type[]"] option').filter(function () {
              return $(this).text().trim().toLowerCase() === permission;
            }).prop('selected', true);
          });
          $('select[name="permission_type[]"]').trigger('change');
        }
      });


      $('#add-permission-form').submit(function (e) {
        e.preventDefault();

        const permissions = $(this).find('select[name="permission_type[]"]').val();

        if (permissions.length === 0 || permissions.includes("")) {
          alert("Please select at least one permission.");
          return;
        }

        const formData = {
          userId: userId,
          permissions: permissions
        };

        $.ajax({
          url: '/admin/add_permission',
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify(formData),
          beforeSend: function () {
            $('#add-permission-loading-spinner').removeClass('d-none');
          },
          success: function (response) {
            if (response.success) {
              setTimeout(() => {
                toastr.success(response.message);
              }, 1500);
              window.location.reload();
            } else {
              toastr.warning(response.message || "Unexpected response");
            }
          },
          error: function (xhr, status, error) {
            console.error("Error adding permissions:", error);
            toastr.error("Error adding permissions: " + error);
          },
          complete: function () {
            $('#add-permission-loading-spinner').addClass('d-none');
          }
        });
      });
    });

  </script>

</body>

</html>